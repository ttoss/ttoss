name: main

'on':
  push:
    branches:
      - main

concurrency:
  group: main
  cancel-in-progress: false

jobs:
  main:
    runs-on: ubuntu-latest
    # Run only if github.event.head_commit.message IS NOT "chore(release): publish packages"
    if: ${{ !contains(github.event.head_commit.message, 'chore(release):') }}
    environment: Production
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 20
          ssh-key: ${{ secrets.SSH_DEPLOY_KEY }}

      # https://github.com/actions/checkout/issues/13#issuecomment-724415212
      - name: Setup git user
        run: |
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          run_install: false
          version: 8

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run main command
        run: sh -e ./.cicd/commands/main.sh
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          TURBO_TEAM: TURBO_TEAM
          TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
          GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
