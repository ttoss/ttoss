name: main

'on':
  push:
    branches:
      - main

concurrency:
  group: main
  cancel-in-progress: false

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 20
          ssh-key: ${{ secrets.SSH_DEPLOY_KEY }}

      - name: Setup git user
        # https://github.com/actions/checkout/issues/13#issuecomment-724415212
        run: |
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"

      - name: Skip if latest tag is the current commit
        run: |
          git fetch --tags
          LATEST_TAG=$(git describe --tags --abbrev=0)
          if [ "$LATEST_TAG" = "$(git rev-parse HEAD)" ]; then
            echo "Latest tag is the same as the current commit, skipping main workflow"
            exit 0
          fi

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile --prefer-offline

      - name: Configure environment
        run: |
          export CARLIN_ENVIRONMENT=Production
          LATEST_TAG=$(git describe --tags --abbrev=0)

      - name: Setup NPM token
        run: echo //registry.npmjs.org/:\_authToken=${NPM_TOKEN} > .npmrc

      - name: Build config to run lint-staged for lint and version bump
        run: yarn turbo run build --filter=@ttoss/config...

      - name: Build modified packages for version bump
        run: yarn turbo run build test lint --filter=[$LATEST_TAG]

      - name: Version before publish to rebuild all packages that Lerna will publish
        run: yarn lerna version --yes --no-push

      - name: Rebuild all packages that Lerna will publish
        run: yarn turbo run build lint test deploy --filter=[$LATEST_TAG]

      - name: Publish packages
        run: yarn lerna publish from-git --yes --no-verify-access

      - name: Push changes
        run: git push --follow-tags
